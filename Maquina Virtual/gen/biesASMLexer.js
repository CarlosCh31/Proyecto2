// Generated from grammar/biesASM.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,15,239,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,
2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,
6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,198,8,9,1,10,1,10,1,10,1,10,1,
10,3,10,205,8,10,1,11,1,11,5,11,209,8,11,10,11,12,11,212,9,11,1,12,3,12,
215,8,12,1,12,4,12,218,8,12,11,12,12,12,219,1,13,1,13,1,13,1,13,5,13,226,
8,13,10,13,12,13,229,9,13,1,13,1,13,1,14,4,14,234,8,14,11,14,12,14,235,1,
14,1,14,0,0,15,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,
25,13,27,14,29,15,1,0,6,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
122,2,0,43,43,45,45,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,13,32,32,
290,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,0,0,0,3,36,1,0,0,0,
5,42,1,0,0,0,7,50,1,0,0,0,9,55,1,0,0,0,11,58,1,0,0,0,13,60,1,0,0,0,15,62,
1,0,0,0,17,64,1,0,0,0,19,197,1,0,0,0,21,204,1,0,0,0,23,206,1,0,0,0,25,214,
1,0,0,0,27,221,1,0,0,0,29,233,1,0,0,0,31,32,5,36,0,0,32,33,5,70,0,0,33,34,
5,85,0,0,34,35,5,78,0,0,35,2,1,0,0,0,36,37,5,97,0,0,37,38,5,114,0,0,38,39,
5,103,0,0,39,40,5,115,0,0,40,41,5,58,0,0,41,4,1,0,0,0,42,43,5,112,0,0,43,
44,5,97,0,0,44,45,5,114,0,0,45,46,5,101,0,0,46,47,5,110,0,0,47,48,5,116,
0,0,48,49,5,58,0,0,49,6,1,0,0,0,50,51,5,36,0,0,51,52,5,69,0,0,52,53,5,78,
0,0,53,54,5,68,0,0,54,8,1,0,0,0,55,56,5,91,0,0,56,57,5,93,0,0,57,10,1,0,
0,0,58,59,5,58,0,0,59,12,1,0,0,0,60,61,5,91,0,0,61,14,1,0,0,0,62,63,5,44,
0,0,63,16,1,0,0,0,64,65,5,93,0,0,65,18,1,0,0,0,66,67,5,73,0,0,67,68,5,78,
0,0,68,198,5,73,0,0,69,70,5,72,0,0,70,71,5,76,0,0,71,198,5,84,0,0,72,73,
5,80,0,0,73,74,5,79,0,0,74,198,5,80,0,0,75,76,5,83,0,0,76,77,5,87,0,0,77,
198,5,80,0,0,78,79,5,76,0,0,79,80,5,68,0,0,80,198,5,86,0,0,81,82,5,66,0,
0,82,83,5,83,0,0,83,198,5,84,0,0,84,85,5,66,0,0,85,86,5,76,0,0,86,198,5,
68,0,0,87,88,5,65,0,0,88,89,5,68,0,0,89,198,5,68,0,0,90,91,5,83,0,0,91,92,
5,85,0,0,92,198,5,66,0,0,93,94,5,77,0,0,94,95,5,85,0,0,95,198,5,76,0,0,96,
97,5,68,0,0,97,98,5,73,0,0,98,198,5,86,0,0,99,100,5,78,0,0,100,101,5,69,
0,0,101,198,5,71,0,0,102,103,5,69,0,0,103,104,5,88,0,0,104,198,5,80,0,0,
105,106,5,83,0,0,106,107,5,71,0,0,107,198,5,78,0,0,108,109,5,69,0,0,109,
198,5,81,0,0,110,111,5,71,0,0,111,198,5,84,0,0,112,113,5,71,0,0,113,114,
5,84,0,0,114,198,5,69,0,0,115,116,5,76,0,0,116,198,5,84,0,0,117,118,5,76,
0,0,118,119,5,84,0,0,119,198,5,69,0,0,120,121,5,65,0,0,121,122,5,78,0,0,
122,198,5,68,0,0,123,124,5,79,0,0,124,198,5,82,0,0,125,126,5,88,0,0,126,
127,5,79,0,0,127,198,5,82,0,0,128,129,5,78,0,0,129,130,5,79,0,0,130,198,
5,84,0,0,131,132,5,83,0,0,132,133,5,78,0,0,133,198,5,84,0,0,134,135,5,83,
0,0,135,136,5,84,0,0,136,198,5,75,0,0,137,138,5,83,0,0,138,139,5,82,0,0,
139,198,5,75,0,0,140,141,5,67,0,0,141,142,5,65,0,0,142,198,5,84,0,0,143,
144,5,84,0,0,144,145,5,79,0,0,145,198,5,83,0,0,146,147,5,76,0,0,147,148,
5,78,0,0,148,198,5,84,0,0,149,150,5,76,0,0,150,151,5,73,0,0,151,198,5,78,
0,0,152,153,5,76,0,0,153,154,5,84,0,0,154,198,5,75,0,0,155,156,5,76,0,0,
156,157,5,82,0,0,157,198,5,75,0,0,158,159,5,84,0,0,159,160,5,79,0,0,160,
198,5,76,0,0,161,162,5,78,0,0,162,163,5,79,0,0,163,198,5,80,0,0,164,165,
5,66,0,0,165,198,5,82,0,0,166,167,5,66,0,0,167,198,5,84,0,0,168,169,5,66,
0,0,169,198,5,70,0,0,170,171,5,76,0,0,171,172,5,68,0,0,172,198,5,70,0,0,
173,174,5,65,0,0,174,175,5,80,0,0,175,198,5,80,0,0,176,177,5,82,0,0,177,
178,5,69,0,0,178,198,5,84,0,0,179,180,5,67,0,0,180,181,5,83,0,0,181,198,
5,84,0,0,182,183,5,73,0,0,183,184,5,78,0,0,184,198,5,79,0,0,185,186,5,80,
0,0,186,187,5,82,0,0,187,198,5,78,0,0,188,189,5,76,0,0,189,190,5,69,0,0,
190,198,5,78,0,0,191,192,5,77,0,0,192,193,5,75,0,0,193,194,5,76,0,0,194,
195,5,73,0,0,195,196,5,83,0,0,196,198,5,84,0,0,197,66,1,0,0,0,197,69,1,0,
0,0,197,72,1,0,0,0,197,75,1,0,0,0,197,78,1,0,0,0,197,81,1,0,0,0,197,84,1,
0,0,0,197,87,1,0,0,0,197,90,1,0,0,0,197,93,1,0,0,0,197,96,1,0,0,0,197,99,
1,0,0,0,197,102,1,0,0,0,197,105,1,0,0,0,197,108,1,0,0,0,197,110,1,0,0,0,
197,112,1,0,0,0,197,115,1,0,0,0,197,117,1,0,0,0,197,120,1,0,0,0,197,123,
1,0,0,0,197,125,1,0,0,0,197,128,1,0,0,0,197,131,1,0,0,0,197,134,1,0,0,0,
197,137,1,0,0,0,197,140,1,0,0,0,197,143,1,0,0,0,197,146,1,0,0,0,197,149,
1,0,0,0,197,152,1,0,0,0,197,155,1,0,0,0,197,158,1,0,0,0,197,161,1,0,0,0,
197,164,1,0,0,0,197,166,1,0,0,0,197,168,1,0,0,0,197,170,1,0,0,0,197,173,
1,0,0,0,197,176,1,0,0,0,197,179,1,0,0,0,197,182,1,0,0,0,197,185,1,0,0,0,
197,188,1,0,0,0,197,191,1,0,0,0,198,20,1,0,0,0,199,200,5,36,0,0,200,205,
3,25,12,0,201,202,5,36,0,0,202,205,3,23,11,0,203,205,3,23,11,0,204,199,1,
0,0,0,204,201,1,0,0,0,204,203,1,0,0,0,205,22,1,0,0,0,206,210,7,0,0,0,207,
209,7,1,0,0,208,207,1,0,0,0,209,212,1,0,0,0,210,208,1,0,0,0,210,211,1,0,
0,0,211,24,1,0,0,0,212,210,1,0,0,0,213,215,7,2,0,0,214,213,1,0,0,0,214,215,
1,0,0,0,215,217,1,0,0,0,216,218,7,3,0,0,217,216,1,0,0,0,218,219,1,0,0,0,
219,217,1,0,0,0,219,220,1,0,0,0,220,26,1,0,0,0,221,227,5,34,0,0,222,226,
8,4,0,0,223,224,5,34,0,0,224,226,5,34,0,0,225,222,1,0,0,0,225,223,1,0,0,
0,226,229,1,0,0,0,227,225,1,0,0,0,227,228,1,0,0,0,228,230,1,0,0,0,229,227,
1,0,0,0,230,231,5,34,0,0,231,28,1,0,0,0,232,234,7,5,0,0,233,232,1,0,0,0,
234,235,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,237,1,0,0,0,237,238,
6,14,0,0,238,30,1,0,0,0,9,0,197,204,210,214,219,225,227,235,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class biesASMLexer extends antlr4.Lexer {

    static grammarFileName = "biesASM.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'$FUN'", "'args:'", "'parent:'", "'$END'", 
                         "'[]'", "':'", "'['", "','", "']'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, "INSTRUCTION", "ARG", "ID", "INT", 
                          "STRING", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "INSTRUCTION", "ARG", "ID", "INT", 
                      "STRING", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

biesASMLexer.EOF = antlr4.Token.EOF;
biesASMLexer.T__0 = 1;
biesASMLexer.T__1 = 2;
biesASMLexer.T__2 = 3;
biesASMLexer.T__3 = 4;
biesASMLexer.T__4 = 5;
biesASMLexer.T__5 = 6;
biesASMLexer.T__6 = 7;
biesASMLexer.T__7 = 8;
biesASMLexer.T__8 = 9;
biesASMLexer.INSTRUCTION = 10;
biesASMLexer.ARG = 11;
biesASMLexer.ID = 12;
biesASMLexer.INT = 13;
biesASMLexer.STRING = 14;
biesASMLexer.WS = 15;



